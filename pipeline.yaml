AWSTemplateFormatVersion: "2010-09-09"

Description: >
  CloudFormation Template Continuous Delivery: This template
  builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for AWS CloudFormation stacks.


Parameters:

  ArtifactStoreBucket:
    Description: S3 bucket to store artifacts in.
    Type: String
    Default: "artifact-store-eu-west-1-093581297635"

  Environment:
    Description: Environment to deploy to
    Type: String
    Default: prod
    AllowedValues:
      - dev
      - test
      - prod

  RepositoryName:
    Description: Name of the CodeCommit repository
    Type: String
    Default: infrastructure

  StackName:
    Description: Name of the CloudFormation Stack to update/create
    Type: String
    Default: pipeline-infrastructure

Resources:

  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSLambda_FullAccess'
        - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonECS_FullAccess'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "codecommit:*"
                  - "s3:*"
                  - "ecs:*"
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "iam:PassRole"
                  - "sns:Publish"
                Resource: '*'

  CodePipelineBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodeCommitPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "codecommit:*"
                Resource: '*'
        - PolicyName: CLoudWatchLogsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: '*'
        - PolicyName: S3Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:List*"
                Resource: '*'
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:UpdateFunctionCode"
                Resource: "*"

  CodePipelineCFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action: 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStoreBucket
        Type: S3
      DisableInboundStageTransitions: []
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                RepositoryName: !Ref RepositoryName
                BranchName: master
              OutputArtifacts:
                - Name: Source
              RunOrder: '1'
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuild
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Build
              RunOrder: '1'
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CodePipelineCFNRole.Arn
                StackName: !Sub 'infrastructure-${Environment}'
                ChangeSetName: !Sub 'infrastructure-changeset-${Environment}'
                ParameterOverrides: !Sub '{"Environment": "${Environment}"}'
                TemplatePath: Build::packaged.yaml
                TemplateConfiguration: Build::config.json
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
              InputArtifacts:
                - Name: Build
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CodePipelineCFNRole.Arn
                StackName: !Sub 'infrastructure-${Environment}'
                ChangeSetName: !Sub 'infrastructure-changeset-${Environment}'
                ParameterOverrides: !Sub '{"Environment": "${Environment}"}'
              OutputArtifacts:
                - Name: !Sub 'InfrastructureChangeSet'
              RunOrder: 2

  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
        Artifacts:
          Type: CODEPIPELINE
        Environment:
            Type: LINUX_CONTAINER
            ComputeType: BUILD_GENERAL1_MEDIUM
            # More info on Images: https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
            Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
            EnvironmentVariables:
              -
                Name: ENVIRONMENT
                Value: !Ref Environment
              -
                Name: ARTIFACT_STORE_BUCKET
                Value: !Ref ArtifactStoreBucket
        Cache:
          Type: S3
          Location: !Sub ${ArtifactStoreBucket}/codebuild-cache
        ServiceRole: !Ref CodePipelineBuildRole
        Source:
          Type: CODEPIPELINE